
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };

    ht_tp: holdtap_tappreferred {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_TAP_TAP_PREFERRED";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <150>;
        quick-tap-ms = <0>;
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
         &kp EQUAL           &kp N1            &kp N2                  &kp N3    &kp N4          &kp N5                 &kp ESCAPE                                                                           &kp RIGHT_ARROW           &kp N6               &kp N7     &kp N8    &kp N9     &kp N0              &kp MINUS
         &kp TAB             &kp Q             &kp W                   &kp E     &kp R           &kp T                  &tog 3                                                                               &tog 1                    &kp Y                &kp U      &kp I     &kp O      &kp P               &kp BSLH
         &kp ESC             &kp A             &kp S                   &kp D     &kp F           &kp G                  &macro_hyper  &ht_tp LEFT_ALT K_APP  &kp LMETA        &kp LALT     &ht_tp RCTRL ESC  &macro_alt_shift_ctrl     &kp H                &kp J      &kp K     &kp L      &lt 2 SEMI          &ht_tp RCMD SINGLE_QUOTE
         &kp LSHFT           &ht_tp LCTRL Z    &kp X                   &kp C     &kp V           &ht_tp LEFT_ALT B                                           &kp HOME         &kp PG_UP                                                &ht_tp RIGHT_ALT N   &kp M      &kp COMMA &kp DOT    &ht_tp RCTRL SLASH  &kp RSHFT
         &ht_tp LCTRL GRAVE  &kp SINGLE_QUOTE  &macro_alt_plus_lshift  &kp LEFT  &kp RIGHT                                    &kp DEL       &kp BACKSPACE    &kp END          &kp PG_DN    &kp ENTER         &kp SPACE                                      &kp UP     &kp DOWN  &kp LBKT   &kp RBKT            &mo 1
            >;
        };

        layer_keypad_fn {
            bindings = <
 &kp ESCAPE           &kp F1       &kp F2                &kp F3                 &kp F4     &kp F5              &kp PRINTSCREEN                                                               &kp RIGHT_ARROW          &kp F6     &kp F7     &kp F8     &kp F9          &kp F10    &kp F11
    &kp TAB  &kp EXCLAMATION  &kp AT_SIGN        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp PIPE                   &none                                                                        &trans    &kp UP_ARROW  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MULTIPLY    &kp F12
    &kp ESC         &kp HASH   &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE            &macro_hyper  &kp LCTRL  &kp INSERT                   &kp LGUI  &kp RCTRL            &tog 3  &kp DOWN_ARROW  &kp KP_N4  &kp KP_N5  &kp KP_N6      &kp KP_PLUS    &kp SQT
  &kp LSHFT      &kp PERCENT    &kp CARET      &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp TILDE                                       &kp HOME                  &kp PG_UP                               &kp AMPERSAND  &kp KP_N1  &kp KP_N2  &kp KP_N3    &kp KP_DIVIDE  &kp RSHFT
      &mo 2        &kp GRAVE       &trans              &kp LEFT              &kp RIGHT                           &kp BSPC    &kp DEL     &kp END                  &kp PG_DN  &kp ENTER        &kp KP_N0                     &kp UP    &kp DOT  &kp KP_N0        &kp EQUAL      &none
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &bootloader                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &to 0                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

    };
};
